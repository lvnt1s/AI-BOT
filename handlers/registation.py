from aiogram import Router, F
from aiogram.enums.chat_type import ChatType
from aiogram.filters import CommandStart,Command
from aiogram.types import Message
from database.database import SessionLocal
from crud.operations import create_user,get_user,update_user
from keyboards.reply import keyboards as reply

router = Router()

@router.message(CommandStart(), F.chat.type == ChatType.PRIVATE)
async def registration(message: Message,command: Command, db = SessionLocal()):
    if (command.args is not None) and (command.args.isdigit() == True):
        owner_id = command.args
        owner = get_user(db,owner_id)
        update_user(user_id=command.args,refferals_count=owner.refferals_count + 1)
    else:
        owner_id = None
    user_id = message.from_user.id
    user_name = message.from_user.username or "NoUsername"
    full_name = message.from_user.full_name
    
    create_user(db, user_id, user_name, full_name,owner_id)
    
    await message.answer(f"""<b>üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Å–∞–º—ã–π —É–º–Ω—ã–π –±–æ—Ç, \
—É –º–µ–Ω—è –µ—Å—Ç—å —Å–∞–º—ã–µ –Ω–æ–≤–µ–π—à–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç!

–Ø –±—É–¥—É –Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –¥–ª—è –≤–∞—Å. \
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—è –¥–ª—è —É—á–µ–±—ã, —Ä–∞–±–æ—Ç—ã –∏ —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏–π.</b>""",reply_markup=await reply.menu(message.from_user.id))
